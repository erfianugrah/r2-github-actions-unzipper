name: R2 Zip Processor

on:
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '*/5 * * * *'  # Run every 5 minutes

jobs:
  scan-r2-bucket:
    runs-on: ubuntu-latest
    outputs:
      zip_files: ${{ steps.scan.outputs.zip_files }}
      file_count: ${{ steps.scan.outputs.file_count }}
      trigger_type: ${{ steps.debug.outputs.trigger_type }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Debug Workflow Trigger
        id: debug
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: .github/scripts/debug_workflow_trigger.sh
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 requests
      
      - name: Scan for ZIP files
        id: scan
        env:
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
        run: python .github/scripts/scan_zip_files.py
  
  process-zip-files:
    needs: scan-r2-bucket
    runs-on: ubuntu-latest
    if: ${{ needs.scan-r2-bucket.outputs.file_count != '0' }}
    strategy:
      matrix:
        file: ${{ fromJson(needs.scan-r2-bucket.outputs.zip_files) }}
      # Allow continuing to other files if one fails
      fail-fast: false
      # Process up to 3 files in parallel
      max-parallel: 3
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 requests concurrent-log-handler
      
      - name: Process Single ZIP File
        env:
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          ZIP_FILE: ${{ matrix.file }}
        run: python .github/scripts/process_zip_file.py
  
  cleanup-directories:
    needs: [scan-r2-bucket, process-zip-files]
    if: always() && needs.scan-r2-bucket.result == 'success' && needs.process-zip-files.result == 'success' && needs.scan-r2-bucket.outputs.file_count != '0'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 requests
      
      - name: Delete only processed files related to this run
        env:
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          ZIP_FILES: ${{ needs.scan-r2-bucket.outputs.zip_files }}
        run: python .github/scripts/cleanup_processed_files.py

  report-results:
    needs: [scan-r2-bucket, process-zip-files, cleanup-directories]
    if: always() && needs.scan-r2-bucket.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Generate Report
        env:
          TRIGGER_TYPE: ${{ needs.scan-r2-bucket.outputs.trigger_type }}
          FILE_COUNT: ${{ needs.scan-r2-bucket.outputs.file_count }}
          PROCESS_RESULT: ${{ needs.process-zip-files.result }}
          CLEANUP_RESULT: ${{ needs.cleanup-directories.result }}
        run: .github/scripts/generate_report.sh